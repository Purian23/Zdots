#!/usr/bin/env bash
set -euo pipefail

# Colors
BLUE="\033[0;34m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
RESET="\033[0m"

INSTALL_DIR="$HOME/.zdots"

echo -e "${BLUE}=== Zdots Setup (Arch Linux) ===${RESET}"

# --- Step 1: Ensure repo is in ~/.zdots ---
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if [ "$SCRIPT_DIR" != "$INSTALL_DIR" ]; then
    echo -e "${YELLOW}Moving Zdots repo to $INSTALL_DIR...${RESET}"
    rm -rf "$INSTALL_DIR"
    mkdir -p "$(dirname "$INSTALL_DIR")"
    mv "$SCRIPT_DIR" "$INSTALL_DIR"
    echo -e "${YELLOW}Restarting setup from $INSTALL_DIR...${RESET}"
    exec "$INSTALL_DIR/setup.sh"
fi

# --- Step 2: Ensure Zsh is installed ---
if ! command -v zsh >/dev/null 2>&1; then
    echo -e "${YELLOW}Zsh not found. Installing with pacman...${RESET}"
    sudo pacman -Sy --needed --noconfirm zsh
else
    echo -e "${BLUE}Zsh is already installed.${RESET}"
fi

# --- Step 3: Install Zinit if missing ---
ZINIT_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
    echo -e "${YELLOW}Installing Zinit...${RESET}"
    mkdir -p "$(dirname "$ZINIT_HOME")"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
else
    echo -e "${BLUE}Zinit already installed.${RESET}"
fi

# --- Step 4: Backup existing .zshrc ---
backup_file=""
if [[ -f "$HOME/.zshrc" && ! -L "$HOME/.zshrc" ]]; then
    backup_file="$HOME/.zshrc.bak.$(date +%Y%m%d%H%M%S)"
    echo -e "${YELLOW}Backing up existing .zshrc to $backup_file${RESET}"
    mv "$HOME/.zshrc" "$backup_file"
fi

# --- Step 5: Generate flattened .zshrc ---
echo -e "${YELLOW}üõ† Generating monolithic ~/.zshrc from zdots modules...${RESET}"
{
  echo "# ==================================================================="
  echo "# Generated by Zdots setup on $(date)"
  echo "# Edit this file directly for changes."
  echo "# ==================================================================="
  echo ""
  echo "# History Configuration"
  echo "HISTFILE=~/.zsh_history"
  echo "HISTSIZE=9023"
  echo "SAVEHIST=9023"
  echo ""
  cat "$INSTALL_DIR/zsh/options.zsh"
  echo ""
  cat "$INSTALL_DIR/zsh/aliases.zsh"
  echo ""
  cat "$INSTALL_DIR/zsh/functions.zsh"
  echo ""
  cat "$INSTALL_DIR/zsh/plugins.zsh"
  echo ""
  cat "$INSTALL_DIR/zsh/prompt.zsh"
  echo ""
  echo "# Test your setup by uncommenting the following lines:"
  echo "# zmodload zsh/zprof"
  echo "# zprof"
} > "$HOME/.zshrc"

# --- Step 6: Granular merge from backup ---
if [[ -n "$backup_file" && -f "$backup_file" ]]; then
    echo -e "${YELLOW}A previous .zshrc backup was found: $backup_file${RESET}"
    {
      echo ""
      echo "# -------------------------------------------------------------------"
      echo "# Imported from previous .zshrc backup on $(date)"
      echo "# -------------------------------------------------------------------"
    } >> "$HOME/.zshrc"

    # Aliases
    read -rp "Merge aliases from backup? [Y/n]: " REPLY
    if [[ "$REPLY" =~ ^[Yy]$ || -z "$REPLY" ]]; then
        grep -E '^alias ' "$backup_file" | while read -r line; do
            if ! grep -Fxq "$line" "$HOME/.zshrc"; then
                echo "$line" >> "$HOME/.zshrc"
                echo -e "${BLUE}Imported alias:${RESET} $line"
            fi
        done
    fi

    # Exports
    read -rp "Merge exports from backup? [Y/n]: " REPLY
    if [[ "$REPLY" =~ ^[Yy]$ || -z "$REPLY" ]]; then
        grep -E '^export ' "$backup_file" | while read -r line; do
            if ! grep -Fxq "$line" "$HOME/.zshrc"; then
                echo "$line" >> "$HOME/.zshrc"
                echo -e "${BLUE}Imported export:${RESET} $line"
            fi
        done
    fi

    # PATH modifications
    read -rp "Merge PATH modifications from backup? [Y/n]: " REPLY
    if [[ "$REPLY" =~ ^[Yy]$ || -z "$REPLY" ]]; then
        grep -E '^PATH=' "$backup_file" | while read -r line; do
            if ! grep -Fxq "$line" "$HOME/.zshrc"; then
                echo "$line" >> "$HOME/.zshrc"
                echo -e "${BLUE}Imported PATH modification:${RESET} $line"
            fi
        done
    fi

    # Functions
    read -rp "Merge functions from backup? [Y/n]: " REPLY
    if [[ "$REPLY" =~ ^[Yy]$ || -z "$REPLY" ]]; then
        awk '
          /^function [a-zA-Z0-9_]+\s*\(\)\s*\{/ {infunc=1; fn=$0 ORS; next}
          infunc {fn=fn $0 ORS; if (/^\}/) {print fn; infunc=0}}
        ' "$backup_file" | while read -r block; do
            if ! grep -Fq "$block" "$HOME/.zshrc"; then
                echo -e "$block" >> "$HOME/.zshrc"
                echo -e "${BLUE}Imported function:${RESET} $(echo "$block" | head -n1)"
            fi
        done
    fi
fi

# --- Step 7: Set Zsh as default shell if not already ---
if [ "$SHELL" != "$(command -v zsh)" ]; then
    echo -e "${YELLOW}Changing default shell to Zsh...${RESET}"
    chsh -s "$(command -v zsh)"
    echo -e "${YELLOW}Default shell changed. This will take effect on your next login.${RESET}"
fi

# --- Step 8: Final instructions & optional auto-switch ---
echo
echo -e "${BLUE}‚úÖ Zdots Setup complete.${RESET}"

if [ -n "${BASH_VERSION-}" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  You are currently in Bash.${RESET}"
    read -rp "Do you want to switch to Zsh now and load your new config? [Y/n]: " REPLY
    if [[ "$REPLY" =~ ^[Yy]$ || -z "$REPLY" ]]; then
        echo -e "${BLUE}Switching to Zsh and loading config...${RESET}"
        exec zsh -i -c "source ~/.zshrc; exec zsh -l"
    else
        echo -e "‚û°  Later, run: ${BLUE}exec zsh${RESET} to switch."
        echo -e "‚û°  Then run: ${BLUE}source ~/.zshrc${RESET} to load your new config."
    fi
else
    echo -e "‚û°  Run: ${BLUE}source ~/.zshrc${RESET} to load your new config."
fi
